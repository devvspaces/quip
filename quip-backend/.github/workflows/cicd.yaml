name: Quip Backend CI/CD Pipeline

on:
  push:
    branches:
        - master  # Adjust branch name as needed
    paths:
        - 'quip-backend/**'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/quip-be:$GITHUB_RUN_NUMBER ./quip-backend

      # Add additional steps here for running tests, linting, etc.

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/quip-be:$GITHUB_RUN_NUMBER

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no  debian@${{ secrets.EC2_IP }} << 'EOF'
            # Stop and remove any existing container
            pwd
           if docker ps -a --format '{{.Names}}' | grep -q '^quip-be$'; then
            docker stop quip-be || true
            docker rm quip-be || true
            docker image prune -af || true
            docker system prune --force || true
          fi 

            # Pull the new image
            docker pull ${{ secrets.DOCKER_USERNAME }}/quip-be:${{ github.run_number }}

            # Run the new container
            docker run -d -p 4000:4000  --env-file /home/debian/quip/.env --name quip-be ${{ secrets.DOCKER_USERNAME }}/quip-be:${{ github.run_number }}
          EOF
